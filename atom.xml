<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>刻写未来！</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-06T03:54:15.772Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>黄上</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>区块链技术解读--哈希算法</title>
    <link href="http://yoursite.com/2018/03/06/%E5%8C%BA%E5%9D%97%E9%93%BE01/"/>
    <id>http://yoursite.com/2018/03/06/区块链01/</id>
    <published>2018-03-06T03:05:49.000Z</published>
    <updated>2018-03-06T03:54:15.772Z</updated>
    
    <content type="html"><![CDATA[<h1 id="哈希算法"><a href="#哈希算法" class="headerlink" title="哈希算法"></a>哈希算法</h1><p><img src="/2018/03/06/区块链01/main.jpeg" alt="logo"></p><a id="more"></a><p>Hash算法是密码学基础，较常用的是MD5系和SHA系的散列算法结构<br>最重要的两条特性为不可逆和无冲突<br>但是这两条特性在数学上是不成立的<br><strong>不可逆</strong>即不可能反向推出哈希码所对应的明文内容，但是既然明文对应密文，非动态，那么就一直可以推出明文，在算法上利用穷举法或者彩虹表可以反解出明文内容因为一个函数必然可逆，且由于HASH函数的值域有限，理论上会有无穷多个不同的原始值，它们的hash值都相同，就是一个密文对应无限明文。<br><strong>无冲突</strong>不算是真的无冲突，密文对应明文，但是密文根据算法的不同，有限制规定的长度，而明文是无限的，所以是有可能发生哈希碰撞的</p><p>MD5和SHA做到的，是求逆和求冲突在计算上不可能，也就是正向计算很容易，而反向计算即使穷尽人类所有的计算资源都做不到。</p><p><img src="/2018/03/06/区块链01/IMG_3237.JPG" alt="logo"></p><p><img src="/2018/03/06/区块链01/IMG_3238.JPG" alt="logo"></p><p>哈希加密算法 MD5,SHA-1,SHA-2,SHA-256,SHA-512,SHA-3,RIPEMD-160等<br>引用自</p><blockquote><p><a href="http://www.atool.org/hash.php" target="_blank" rel="noopener">http://www.atool.org/hash.php</a></p></blockquote><h2 id="MD5算法"><a href="#MD5算法" class="headerlink" title="MD5算法"></a>MD5算法</h2><p>MD5即Message-Digest Algorithm 5（信息-摘要算法 5），用于确保信息传输完整一致。是计算机广泛使用的散列算法之一（又译摘要算法、哈希算法），主流编程语言普遍已有MD5实现。 将数据（如汉字）运算为另一固定长度值，是散列算法的基础原理，MD5的前身有MD2、MD3和MD4。<br>MD5一度被广泛应用于安全领域。但是由于MD5的弱点被不断发现以及计算机能力不断的提升，现在已经可以构造两个具有相同MD5的信息[2]，使本算法不再适合当前的安全环境。目前，MD5计算广泛应用于错误检查。例如在一些BitTorrent下载中，软件通过计算MD5和检验下载到的碎片的完整性。<br>MD5是输入不定长度信息，输出固定长度128-bits的算法。经过程序流程，生成四个32位数据，最后联合起来成为一个128-bits散列。基本方式为，求余、取余、调整长度、与链接变量进行循环运算。得出结果。</p><h2 id="SHA-1哈希加密算法"><a href="#SHA-1哈希加密算法" class="headerlink" title="SHA-1哈希加密算法"></a>SHA-1哈希加密算法</h2><p>SHA-1在许多安全协议中广为使用，包括TLS和SSL、PGP、SSH、S/MIME和IPsec，曾被视为是MD5（更早之前被广为使用的散列函数）的后继者。<br>但SHA-1的安全性如今被密码学家严重质疑。</p><h2 id="SHA-2哈希加密算法"><a href="#SHA-2哈希加密算法" class="headerlink" title="SHA-2哈希加密算法"></a>SHA-2哈希加密算法</h2><p>SHA-224、SHA-256、SHA-384，和SHA-512并称为SHA-2。<br>新的散列函数并没有接受像SHA-1一样的公众密码社区做详细的检验，所以它们的密码安全性还不被大家广泛的信任。<br>虽然至今尚未出现对SHA-2有效的攻击，它的算法跟SHA-1基本上仍然相似；因此有些人开始发展其他替代的散列算法。</p><h2 id="SHA-3哈希加密算法"><a href="#SHA-3哈希加密算法" class="headerlink" title="SHA-3哈希加密算法"></a>SHA-3哈希加密算法</h2><p>SHA-3，之前名为Keccak算法，是一个加密杂凑算法。<br>SHA-3并不是要取代SHA-2，因为SHA-2目前并没有出现明显的弱点。<br>由于对MD5出现成功的破解，以及对SHA-0和SHA-1出现理论上破解的方法，NIST感觉需要一个与之前算法不同的，可替换的加密杂凑算法，也就是现在的SHA-3。</p><h2 id="RIPEMD-160哈希加密算法"><a href="#RIPEMD-160哈希加密算法" class="headerlink" title="RIPEMD-160哈希加密算法"></a>RIPEMD-160哈希加密算法</h2><p>RIPEMD-160 是一个 160 位加密哈希函数。<br>它旨在用于替代 128 位哈希函数 MD4、MD5 和 RIPEMD。<br>RIPEMD 是在 EU 项目 RIPE（RACE Integrity Primitives Evaluation，1988-1992）的框架中开发的。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;哈希算法&quot;&gt;&lt;a href=&quot;#哈希算法&quot; class=&quot;headerlink&quot; title=&quot;哈希算法&quot;&gt;&lt;/a&gt;哈希算法&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2018/03/06/区块链01/main.jpeg&quot; alt=&quot;logo&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="区块链技术" scheme="http://yoursite.com/categories/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="http://yoursite.com/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="数字货币" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%97%E8%B4%A7%E5%B8%81/"/>
    
      <category term="互联网金融" scheme="http://yoursite.com/tags/%E4%BA%92%E8%81%94%E7%BD%91%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>HEXO技巧分享--不借助第三方图库上传图片</title>
    <link href="http://yoursite.com/2018/03/06/hexo-photo/"/>
    <id>http://yoursite.com/2018/03/06/hexo-photo/</id>
    <published>2018-03-05T16:52:04.000Z</published>
    <updated>2018-03-05T17:11:48.998Z</updated>
    
    <content type="html"><![CDATA[<p>图片测试，来自Hexo大佬的指导，不通过第三方图床上传图片</p><p><img src="/2018/03/06/hexo-photo/photo1.png" alt="logo"></p><a id="more"></a><p>1.首先确认_config.yml 中有 post_asset_folder:true。<br>Hexo 提供了一种更方便管理 Asset 的设定：post_asset_folder<br>当您设置post_asset_folder为true参数后，在建立文件时，Hexo<br>会自动建立一个与文章同名的文件夹，您可以把与该文章相关的所有资源都放到那个文件夹，如此一来，您便可以更方便的使用资源。</p><p>2.在hexo的目录下执行npm install <a href="https://github.com/CodeFalling/hexo-asset-image" target="_blank" rel="noopener">https://github.com/CodeFalling/hexo-asset-image</a> –save（需要等待一段时间）。</p><p>3.完成安装后用hexo新建文章的时候会发现_posts目录下面会多出一个和文章名字一样的文件夹。图片就可以放在文件夹下面。结构如下：</p><p>本地图片测试<br>├── apppicker.jpg<br>├── logo.jpg<br>└── rules.jpg<br>本地图片测试.md<br>这样的目录结构（目录名和文章名一致），只要使用 <code>![logo](本地图片测试/logo.jpg)</code>格式 就可以插入图片。其中[]里面不写文字则没有图片标题。<br>生成的结构为</p><p>public/2016/3/9/本地图片测试<br>├── apppicker.jpg<br>├── index.html<br>├── logo.jpg<br>└── rules.jpg<br>同时，生成的 html 是</p><pre><code>&lt;img src=&quot;/2016/3/9/本地图片测试/logo.jpg&quot; alt=&quot;logo&quot;&gt;</code></pre><p>而不是愚蠢的</p><pre><code>&lt;img src=&quot;本地图片测试/logo.jpg&quot; alt=&quot;logo&quot;&gt;</code></pre><p>注意:<br>通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo3的发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。</p><p><img src="/2018/03/06/hexo-photo/photo2.png" alt="logo"></p><p>比如说：当你打开文章资源文件夹功能后，你把一个 example.jpg图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 <a href="/example.jpg"></a>，它将 不会 出现在首页上。（但是它会在文章中按你期待的方式工作）</p><p>正确的引用图片方式是使用下列的标签插件而不是markdown</p><p><img src="/2018/03/06/hexo-photo/photo3.png" alt="logo"></p><p>作者：TSimeon<br>链接：<a href="https://www.jianshu.com/p/c2ba9533088a" target="_blank" rel="noopener">https://www.jianshu.com/p/c2ba9533088a</a><br>來源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;图片测试，来自Hexo大佬的指导，不通过第三方图床上传图片&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2018/03/06/hexo-photo/photo1.png&quot; alt=&quot;logo&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo教程" scheme="http://yoursite.com/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="HEXO技巧" scheme="http://yoursite.com/tags/HEXO%E6%8A%80%E5%B7%A7/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>HEXO技巧分享--busuanzi技术</title>
    <link href="http://yoursite.com/2018/03/05/test2/"/>
    <id>http://yoursite.com/2018/03/05/test2/</id>
    <published>2018-03-05T12:51:24.000Z</published>
    <updated>2018-03-05T16:09:11.853Z</updated>
    
    <content type="html"><![CDATA[<p>在新版的Next主题中，就内置了不蒜子作为统计工具<br>我们只需要在主题config中配置即可</p><p>操作：</p><p>打开文件：<br>themes/next/_config.yml</p><a id="more"></a><p>busuanzi_count:</p><h1 id="count-values-only-if-the-other-configs-are-false"><a href="#count-values-only-if-the-other-configs-are-false" class="headerlink" title="count values only if the other configs are false"></a>count values only if the other configs are false</h1><p>  <code>enable: true</code></p><h1 id="custom-uv-span-for-the-whole-site"><a href="#custom-uv-span-for-the-whole-site" class="headerlink" title="custom uv span for the whole site"></a>custom uv span for the whole site</h1><p>   site_uv: true<br>   site_uv_header: <i class="fa fa-user"></i> 访问人数<br>   site_uv_footer: 人</p><h1 id="custom-pv-span-for-the-whole-site"><a href="#custom-pv-span-for-the-whole-site" class="headerlink" title="custom pv span for the whole site"></a>custom pv span for the whole site</h1><p>  site_pv: true<br>  site_pv_header: <i class="fa fa-eye"></i> 总访问量<br>  site_pv_footer: 次</p><h1 id="custom-pv-span-for-one-page-only"><a href="#custom-pv-span-for-one-page-only" class="headerlink" title="custom pv span for one page only"></a>custom pv span for one page only</h1><p>  page_pv: true<br>  page_pv_header: <i class="fa fa-file-o"></i> 阅读数<br>  page_pv_footer:</p><p>相关操作： </p><ol><li>enable: true </li><li>添加相关中文说明，不添加也行。</li></ol><p>但若是我们想自己集成不蒜子<br>具体实现方法</p><p>打开\themes\next\layout_partials\footer.swig文件,在copyright前加上这段代码</p><pre><code>&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</code></pre><p>然后再合适的位置添加显示统计的代码</p><!--more--><p>themes\iissnan\layout_third-party\analytics\busuanzi-counter.swig中</p><p>在这里有两中不同计算方式的统计代码：</p><h1 id="pv的方式，单个用户连续点击n篇文章，记录n次访问量"><a href="#pv的方式，单个用户连续点击n篇文章，记录n次访问量" class="headerlink" title="pv的方式，单个用户连续点击n篇文章，记录n次访问量"></a>pv的方式，单个用户连续点击n篇文章，记录n次访问量</h1><pre><code>&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;</code></pre><h1 id="uv的方式，单个用户连续点击n篇文章，只记录1次访客数"><a href="#uv的方式，单个用户连续点击n篇文章，只记录1次访客数" class="headerlink" title="uv的方式，单个用户连续点击n篇文章，只记录1次访客数"></a>uv的方式，单个用户连续点击n篇文章，只记录1次访客数</h1><pre><code>&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;  本站总访问量&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;</code></pre><p>添加之后再执行hexo d -g，然后再刷新页面就能看到效果</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在新版的Next主题中，就内置了不蒜子作为统计工具&lt;br&gt;我们只需要在主题config中配置即可&lt;/p&gt;
&lt;p&gt;操作：&lt;/p&gt;
&lt;p&gt;打开文件：&lt;br&gt;themes/next/_config.yml&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo教程" scheme="http://yoursite.com/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="HEXO技巧" scheme="http://yoursite.com/tags/HEXO%E6%8A%80%E5%B7%A7/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>HEXO技巧分享--如何建立分类及标签</title>
    <link href="http://yoursite.com/2018/03/05/hexo-tech2/"/>
    <id>http://yoursite.com/2018/03/05/hexo-tech2/</id>
    <published>2018-03-05T08:03:27.000Z</published>
    <updated>2018-03-05T08:27:08.824Z</updated>
    
    <content type="html"><![CDATA[<p>在hexo框架中，建立分类和标签的方法如下</p><h1 id="添加标签"><a href="#添加标签" class="headerlink" title="添加标签"></a>添加标签</h1><p>hexo new page tags<br>这个是自动创建tags文件夹的命令,里面会自动生成index.md文件，当然也可以手动创建tags文件夹和md文件，不过这样就会没有时间显示</p><a id="more"></a><p>确认站点配置文件里有tag_dir: tags<br>确认主题配置文件里有tags: /tags<br>编辑站点的source/tags/index.md，添加</p><p><code>title: tags #标签的标题，可以说是几个共同特性标签的集合type: &quot;tags&quot; #这里是对应站点配置文件中的tagscomments: false</code></p><p>调好后，我们就可以在文章中自由添加标签了<br>比如</p><p>`—<br>title: HEXO技巧分享–如何建立分类及标签<br>date: 2018-03-05 16:03:27<br>tags: </p><pre><code>- HEXO技巧- hexo</code></pre><p>—`<br>HEXO技巧和hexo这两个标签会在tags页面自动生成并导航</p><h1 id="添加分类"><a href="#添加分类" class="headerlink" title="添加分类"></a>添加分类</h1><p>hexo new page categories<br>确认站点配置文件里有category_dir: categories<br>确认主题配置文件里有categories: /categories<br>编辑站点的source/categories/index.md，添加</p><p><code>title: categoriestype: &quot;categories&quot;comments: false</code></p><p>调好后，我们就可以在文章中自由添加分类了<br>比如</p><p>`—<br>title: HEXO技巧分享–如何建立分类及标签<br>date: 2018-03-05 16:03:27<br>categories: “Hexo教程” </p><p>—`</p><h1 id="添加关于"><a href="#添加关于" class="headerlink" title="添加关于"></a>添加关于</h1><p>hexo new page “about”<br>在about文件夹下的index.md文件中<br>写上文字后更新<br>就可以在页面中看到了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在hexo框架中，建立分类和标签的方法如下&lt;/p&gt;
&lt;h1 id=&quot;添加标签&quot;&gt;&lt;a href=&quot;#添加标签&quot; class=&quot;headerlink&quot; title=&quot;添加标签&quot;&gt;&lt;/a&gt;添加标签&lt;/h1&gt;&lt;p&gt;hexo new page tags&lt;br&gt;这个是自动创建tags文件夹的命令,里面会自动生成index.md文件，当然也可以手动创建tags文件夹和md文件，不过这样就会没有时间显示&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo教程" scheme="http://yoursite.com/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="HEXO技巧" scheme="http://yoursite.com/tags/HEXO%E6%8A%80%E5%B7%A7/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>HEXO技巧分享--德文错误显示修改</title>
    <link href="http://yoursite.com/2018/03/05/hexo-tech/"/>
    <id>http://yoursite.com/2018/03/05/hexo-tech/</id>
    <published>2018-03-05T07:29:10.000Z</published>
    <updated>2018-03-05T08:27:20.696Z</updated>
    
    <content type="html"><![CDATA[<p>在所应用的主题的languages文件夹中将 zh—Hans.yml 改成 zh—CN.yml<br>然后在HEXO主目录下的_config.yml配置文件中修改 language： zh—CN 即可 </p><a id="more"></a><p><code>更新操作hexo cleanhexo ghexo s（预览检查）hexo deploy #部署</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在所应用的主题的languages文件夹中将 zh—Hans.yml 改成 zh—CN.yml&lt;br&gt;然后在HEXO主目录下的_config.yml配置文件中修改 language： zh—CN 即可 &lt;/p&gt;
    
    </summary>
    
      <category term="Hexo教程" scheme="http://yoursite.com/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="HEXO技巧" scheme="http://yoursite.com/tags/HEXO%E6%8A%80%E5%B7%A7/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo驱动+Github搭载Blog系统</title>
    <link href="http://yoursite.com/2018/03/04/hexo_init1/"/>
    <id>http://yoursite.com/2018/03/04/hexo_init1/</id>
    <published>2018-03-04T05:36:59.000Z</published>
    <updated>2018-03-05T05:57:07.178Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分享HEXO-GITHUB搭载驱动的博文系统"><a href="#分享HEXO-GITHUB搭载驱动的博文系统" class="headerlink" title="分享HEXO+GITHUB搭载驱动的博文系统"></a>分享HEXO+GITHUB搭载驱动的博文系统</h1><p>使用github pages服务搭建博客的好处有：</p><p>全是静态文件，访问速度快；<br>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；<br>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；<br>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；<br>博客内容可以轻松打包、转移、发布到其它平台；</p><a id="more"></a><h1 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo?"></a>什么是Hexo?</h1><p>Hexo官网中说是这么描述的：A fast, simple &amp; powerful blog framework,即:一个快速、简单且强大的博客快速生产工具。它的简单体现在你完全有可能在30分钟内就生成属于你的个人博客。而它的强大体现在你对细节的调整上完全有可能花上一天的时间。<br>Hexo(中文官方网站)是一个快速, 简洁且高效的博客框架. 让上百个页面在几秒内瞬间完成渲染. Hexo支持Github Flavored Markdown的所有功能, 甚至可以整合Octopress的大多数插件. 并自己也拥有强大的插件系统.</p><ol><li>Blazing Fast<br>Node.js brings you incredible generating speed. Hundreds of files take only seconds to build.</li></ol><ol><li>Markdown Support<br>All features of GitHub Flavored Markdown are supported. You can even use most Octopress plugins in Hexo.</li></ol><ol><li>One-Command Deployment<br>You only need one command to deploy your site to GitHub Pages, Heroku or other sites.</li></ol><ol><li>Various Plugins<br>Hexo has a powerful plugin system. You can install more plugins for Jade, CoffeeScript plugins.</li></ol><h1 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1.安装node.js"></a>1.安装node.js</h1><p>Node.js 的实质是一个JavaScript运行环境,这里我们主要使用它来生成我们博客的静态页面.<br>Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js’ package ecosystem, npm, is the largest ecosystem of open source libraries in the world.<br><strong>Window 上安装Node.js</strong><br>你可以采用以下两种方式来安装。</p><ol><li>Windows 安装包(.msi)形式<br>32 位安装包下载地址 : <a href="https://nodejs.org/dist/v4.4.3/node-v4.4.3-x86.msi" target="_blank" rel="noopener">https://nodejs.org/dist/v4.4.3/node-v4.4.3-x86.msi</a><br>64 位安装包下载地址 : <a href="https://nodejs.org/dist/v4.4.3/node-v4.4.3-x64.msi" target="_blank" rel="noopener">https://nodejs.org/dist/v4.4.3/node-v4.4.3-x64.msi</a><br>步骤 1 : 双击下载后的安装包<br>步骤 2 : 点击以上的Run(运行)<br>步骤 3 : 勾选接受协议选项，点击 next（下一步） 按钮<br>步骤 4 : Node.js默认安装目录为 “C:\Program Files\nodejs\” , 你可以修改目录，并点击 next（下一步）<br>步骤 5 : 点击树形图标来选择你需要的安装模式 , 然后点击下一步 next（下一步）<br>步骤 6 :点击 Install（安装） 开始安装Node.js。你也可以点击 Back（返回）来修改先前的配置。 然后并点击 next（下一步）<br>点击 Finish（完成）按钮退出安装向导即可</li></ol><p>检测PATH环境变量是否配置了Node.js，点击开始=》运行=》输入”cmd” =&gt; 输入命令”path”，输出如下结果：<br>    PATH=C:\oraclexe\app\oracle\product\10.2.0\server\bin;C:\Windows\system32;<br>    C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;<br>    c:\python32\python;C:\MinGW\bin;C:\Program Files\GTK2-Runtime\lib;<br>    C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files\nodejs\;<br>    C:\Users\rg\AppData\Roaming\npm</p><p>我们可以看到环境变量中已经包含了C:\Program Files\nodejs\<br>检查Node.js版本</p><ol><li>Windows 二进制文件 (.exe)安装形式<br>32 位安装包下载地址 : <a href="http://nodejs.org/dist/v0.10.26/node.exe" target="_blank" rel="noopener">http://nodejs.org/dist/v0.10.26/node.exe</a><br>64 位安装包下载地址 : <a href="http://nodejs.org/dist/v0.10.26/x64/node.exe" target="_blank" rel="noopener">http://nodejs.org/dist/v0.10.26/x64/node.exe</a></li></ol><p>步骤 1 : 双击下载的安装包 Node.exe<br>点击 Run（运行）按钮将出现命令行窗口<br>进入 node.exe 所在的目录，若是获得版本显示则证明安装成功</p><p>当然也可以在安装完成之后<br>安装完成后可以使用cmd（win+r然后输入cmd进入）测试下是否安装成功。方法：在cmd下输入node -v<br>若是出现版本号则证明安装成功</p><p>npm的安装。由于新版的NodeJS已经集成了npm，所以之前npm也一并安装好了。同样可以使用cmd命令行输入”npm -v”来测试是否成功安装</p><ul><li>Build amazing things<br>npm is the package manager for JavaScript and the world’s largest software registry. Discover packages of reusable code — and assemble them in powerful new ways.</li><li>npm Orgs is powerful collaboration — for free<br>Encourage code discovery and re-use within teams<br>Publish and control access to your own namespace<br>Manage public and private code with the same workflow</li><li>What is npm?<br>Use npm to install, share, and distribute code; manage dependencies in your projects; and share &amp; receive feedback with others.</li></ul><p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：<br>允许用户从NPM服务器下载别人编写的第三方包到本地使用。<br>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。<br>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。</p><p>安装好Node.js和npm后可以进入下一步</p><h1 id="2-安装git环境"><a href="#2-安装git环境" class="headerlink" title="2.安装git环境"></a>2.安装git环境</h1><p>git是最流行的分布式版本控制系统，我们使用它主要是与github进行交互。安装git使用默认选项安装即可<br>关于Git的学习<br><a href="http://https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/" target="_blank" rel="noopener">http://https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/</a><br>这里即可点击：<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/" title="网上找的传送门" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/</a></p><p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.</p><p>Git is easy to learn and has a tiny footprint with lightning fast performance. It outclasses SCM tools like Subversion, CVS, Perforce, and ClearCase with features like cheap local branching, convenient staging areas, and multiple workflows.<br>Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。[1]  Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。<br>Torvalds 开始着手开发 Git 是为了作为一种过渡方案来替代 BitKeeper，后者之前一直是 Linux 内核开发人员在全球使用的主要源代码工具。开放源码社区中的有些人觉得BitKeeper 的许可证并不适合开放源码社区的工作，因此 Torvalds 决定着手研究许可证更为灵活的版本控制系统。尽管最初 Git 的开发是为了辅助 Linux 内核开发的过程，但是我们已经发现在很多其他自由软件项目中也使用了 Git。例如 很多 Freedesktop 的项目迁移到了 Git 上。</p><p>这里引用<a href="www.liaoxuefeng.com">www.liaoxuefeng.com</a><br>廖雪峰的官网上的说法，很清楚明朗的了解Git的原理</p><p>Git是目前世界上最先进的分布式版本控制系统<br>那什么是版本控制系统？</p><p>如果你用Microsoft Word写过长篇大论，那你一定有这样的经历：</p><p>想删除一个段落，又怕将来想恢复找不回来怎么办？有办法，先把当前文件“另存为……”一个新的Word文件，再接着改，改到一定程度，再“另存为……”一个新文件，这样一直改下去，最后你的Word文档变成了这样七零八乱的一改二改的版本<br>过了一周，你想找回被删除的文字，但是已经记不清删除前保存在哪个文件里了，只好一个一个文件去找，真麻烦。</p><p>看着一堆乱七八糟的文件，想保留最新的一个，然后把其他的删掉，又怕哪天会用上，还不敢删，真郁闷。</p><p>更要命的是，有些部分需要你的财务同事帮助填写，于是你把文件Copy到U盘里给她（也可能通过Email发送一份给她），然后，你继续修改Word文件。一天后，同事再把Word文件传给你，此时，你必须想想，发给她之后到你收到她的文件期间，你作了哪些改动，得把你的改动和她的部分合并，真困难。</p><p>于是你想，如果有一个软件，不但能自动帮我记录每次文件的改动，还可以让同事协作编辑，这样就不用自己管理一堆类似的文件了，也不需要把文件传来传去。如果想查看某次改动，只需要在软件里瞄一眼就可以，岂不是很方便？</p><p>这个软件用起来就应该像这个样子，能记录每次文件的改动<br>这样，你就结束了手动管理多个“版本”的史前时代，进入到版本控制的20世纪。</p><hr><p>最早Git是在Linux上开发的，很长一段时间内，Git也只能在Linux和Unix系统上跑。不过，慢慢地有人把它移植到了Windows上。现在，Git可以在Linux、Unix、Mac和Windows这几大平台上正常运行了。</p><p><strong>在Windows上安装Git</strong><br>在Windows上使用Git，可以从<a href="https://git-scm.com/downloads" title="Git官网" target="_blank" rel="noopener">Git官网</a>直接下载安装程序，（网速慢的同学请移步<a href="https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fgit" title="国内镜像" target="_blank" rel="noopener">国内镜像</a>），然后按默认选项安装即可。</p><p>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！</p><p>安装完成后，还需要最后一步设置，在命令行输入：</p><p><code>$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot;</code></p><p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址</p><p><strong>创建版本库</strong><br>什么是版本库呢？版本库又名仓库，英文名repository，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</p><ol><li>创建一个空目录</li><li>通过git init命令把这个目录变成Git可以管理的仓库</li></ol><p><strong>把文件添加到版本库</strong></p><p>首先这里再明确一下，所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。</p><p>不幸的是，Microsoft的Word格式是二进制格式，因此，版本控制系统是没法跟踪Word文件的改动的，前面我们举的例子只是为了演示，如果要真正使用版本控制系统，就要以纯文本方式编写文件。</p><p>因为文本是有编码的，比如中文有常用的GBK编码，日文有Shift_JIS编码，如果没有历史遗留问题，强烈建议使用标准的UTF-8编码，所有语言使用同一种编码，既没有冲突，又被所有平台所支持。<br>千万不要使用Windows自带的记事本编辑任何文本文件。原因是Microsoft开发记事本的团队使用了一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf（十六进制）的字符，你会遇到很多不可思议的问题，比如，网页第一行可能会显示一个“?”，明明正确的程序一编译就报语法错误，等等，都是由记事本的弱智行为带来的。建议你下载Notepad++代替记事本，不但功能强大，而且免费！记得把Notepad++的默认编码设置为UTF-8 without BOM即可</p><p>搭载好Git后以后就可以通过Git Base Here命令行来操控Hexo了<br>用windows的cmd也可以操作，但是有时候一些命令无法实现，所以尽量全部使用Git Base Here来操作</p><h1 id="3-注册github"><a href="#3-注册github" class="headerlink" title="3.注册github"></a>3.注册github</h1><p>github就不用说了吧，它是一个面向开源及私有软件项目的托管平台。几乎所有的程序员都听说过它的大名。就正常注册一个账号就好了。<br>注册号以后首先给我们的账号添加本机的SSH，具体方法及原因在这篇文章已经有了详细说明，并且方法也很简单</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;分享HEXO-GITHUB搭载驱动的博文系统&quot;&gt;&lt;a href=&quot;#分享HEXO-GITHUB搭载驱动的博文系统&quot; class=&quot;headerlink&quot; title=&quot;分享HEXO+GITHUB搭载驱动的博文系统&quot;&gt;&lt;/a&gt;分享HEXO+GITHUB搭载驱动的博文系统&lt;/h1&gt;&lt;p&gt;使用github pages服务搭建博客的好处有：&lt;/p&gt;
&lt;p&gt;全是静态文件，访问速度快；&lt;br&gt;免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；&lt;br&gt;可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；&lt;br&gt;数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；&lt;br&gt;博客内容可以轻松打包、转移、发布到其它平台；&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/03/01/hello-world/"/>
    <id>http://yoursite.com/2018/03/01/hello-world/</id>
    <published>2018-03-01T09:31:11.568Z</published>
    <updated>2018-03-05T05:59:38.338Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
